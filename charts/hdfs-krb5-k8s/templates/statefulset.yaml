apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "hdfs-k8s.krb5.fullname" . }}
  labels:
    app: {{ template "hdfs-k8s.krb5.name" . }}
    chart: {{ template "hdfs-k8s.subchart" . }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
  serviceName: {{ template "hdfs-k8s.krb5.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "hdfs-k8s.krb5.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "hdfs-k8s.krb5.name" . }}
        release: {{ .Release.Name }}
      {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ['/bin/sh']
          args: ["-c","sleep infinity"]
          env:
            - name: KRB5_REALM
              value: {{ .Values.global.kerberosRealm }}
            - name: KRB5_KDC
              value: {{ template "krb5-svc-0" . }}
            - name: LDAP_URI
              value: {{ .Values.global.ldapuri }} 
          ports:
            - name: kdc-tcp
              containerPort: 88
              protocol: TCP
            - name: kdc-udp
              containerPort: 88
              protocol: UDP
#          livenessProbe:
#            initialDelaySeconds: 60
#            periodSeconds: 30
#            tcpSocket:
#              port: kdc-tcp
#          readinessProbe:
#            initialDelaySeconds: 60
#            periodSeconds: 30
#            tcpSocket:
              port: kdc-tcp
          volumeMounts:
            - mountPath: /var/lib/krb5kdc
              name: datadir
              readOnly: false
            - mountPath: /etc/krb5kdc
              name: secret-file
              readOnly: false
      restartPolicy: Always
      {{- if .Values.global.podSecurityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.global.podSecurityContext.runAsUser }}
        fsGroup: {{ .Values.global.podSecurityContext.fsGroup }}
      {{- end }}
      volumes:  
        - name: secret-file
          secret:
            secretName: {{ template "hdfs-k8s.krb5.fullname" . }}
  volumeClaimTemplates:
    - metadata:
        name: datadir
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
      {{- if .Values.persistence.storageClass }}
        {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
        {{- end }}
      {{- end }}
      {{- if .Values.persistence.selector }}
        selector:
{{ toYaml .Values.persistence.selector | indent 10 }}
      {{- end }}
