apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "hive-meta-store.fullname" . }}
  labels:
    {{- include "hive-meta-store.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  serviceName: {{ include "hive-meta-store.fullname" . }}
  selector:
    matchLabels:
      {{- include "hive-meta-store.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hive-meta-store.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "hive-meta-store.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ['/bin/sh']
          args: ["-c","hive --service metastore"]
#          args: ["-c","sleep 10000000000"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "postgresql.secretName" . }}
                key: {{ template "postgresql.adminPasswordKey" . }}
          ports:
            - name: metastore
              containerPort: 9083
              protocol: TCP
            - name: thrift
              containerPort: 10000
              protocol: TCP  
          volumeMounts:
            - name: hive-config
              mountPath: /opt/hive/conf/
              readOnly: true  
            - name: kerberos-config
              mountPath: /etc/krb5.conf
              subPath: krb5.conf
              readOnly: true
            - name: kerberos-keytabs
              mountPath: /etc/security/
              readOnly: true 
#          livenessProbe:
#            tcpSocket:
#              port: metastore
#            initialDelaySeconds: 60
#            periodSeconds: 10
#          readinessProbe:
#            tcpSocket:
#              port: metastore
#            initialDelaySeconds: 60
#            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: init-mydb
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ['sh', '-c', "schematool -dbType postgres -initSchema -ifNotExists"]  
          volumeMounts:
            - name: hive-config
              mountPath: /opt/hive/conf/
              readOnly: true  
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "postgresql.secretName" . }}
                  key: {{ template "postgresql.adminPasswordKey" . }}
      volumes:
        - name: kerberos-config
          configMap:
            name: {{ template "krb5-configmap" . }}
        - name: hive-config
          projected:
            sources:
              - configMap:
                  name: {{ template "hive-meta-store.config.fullname" . }}
              - configMap:
                  name: {{ template "hdfs-k8s.config.fullname" . }}    
        - name: kerberos-keytabs
          secret:
            secretName: {{ template "hive-keytabs-secret" . }}