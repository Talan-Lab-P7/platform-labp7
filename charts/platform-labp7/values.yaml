# Default values for platform-labp7.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

condition:
  subchart:
    config: true
    hdfs: true
    spark: true
    hive-meta-store: true
    ranger-kms: true
    ranger-admin: true


image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        backend:
          serviceName: chart-example.local
          servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


## ------------------------------------------------------------------------------
## zookeeper:
## ------------------------------------------------------------------------------
zookeeper:
  ## Configure Zookeeper resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  resources: ~

  ## The JVM heap size to allocate to Zookeeper
  env:
    ZK_HEAP_SIZE: 1G

  ## The number of zookeeper server to have in the quorum.
  replicaCount: 1

  selector:
    matchLabels:
      volume-type: zookeeper

## ------------------------------------------------------------------------------
## hdfs-config-k8s:
## ------------------------------------------------------------------------------
hdfs-config-k8s:
  ## Custom hadoop config keys passed to the hdfs configmap as extra keys.
  customHadoopConfig:
     coreSite: {}
      ## Set config key and value pairs, e.g.
      # hadoop.http.authentication.type: kerberos

     hdfsSite: {}
      ## Set config key and value pairs, e.g.
      # dfs.datanode.use.datanode.hostname: "false"

## ------------------------------------------------------------------------------
## hdfs-journalnode-k8s:
## ------------------------------------------------------------------------------
hdfs-journalnode-k8s:
  persistence:
    ## Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: ""
    ## To choose a suitable persistent volume from available static volumes, selectors
    ## are used.
    selector:
      matchLabels:
        volume-type: journal
    accessMode: ReadWriteOnce
    size: 10Gi

  ## Node labels and tolerations for pod assignment
  nodeSelector: {}
  tolerations: []
  affinity: {}

## ------------------------------------------------------------------------------
## hdfs-namenode-k8s:
## ------------------------------------------------------------------------------
hdfs-namenode-k8s:
  ## Name of the namenode start script in the config map.
  #namenodeStartScript: format-and-run.sh
  namenodeStartScript: do-nothing.sh
  ## A namenode start script that can have user specified content.
  ## Can be used to conduct ad-hoc operation as specified by a user.
  ## To use this, also set the namenodeStartScript variable above
  ## to custom-run.sh.
  customRunScript: |
    #!/bin/bash -x
    echo Write your own script content!
    echo This message will disappear in 10 seconds.
    sleep 10

  persistence:
    ## Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: "-"

    ## To choose a suitable persistent volume from available static volumes, selectors
    ## are used.
    selector:
      matchLabels:
        volume-type: "namenode"

    accessMode: ReadWriteOnce

    size: 10Gi

  ## Whether or not to use hostNetwork in namenode pods. Disabling this will break
  ## data locality as namenode will see pod virtual IPs and fails to equate them with
  ## cluster node physical IPs associated with data nodes.
  ## We currently disable this only for CI on minikube.
  hostNetworkEnabled: true

  ## Node labels and tolerations for pod assignment
  nodeSelector: {}
  tolerations: []
  affinity: {}

## ------------------------------------------------------------------------------
## hdfs-simple-namenode-k8s:
## ------------------------------------------------------------------------------
hdfs-simple-namenode-k8s:
  ## Path of the local disk directory on a cluster node that will contain the namenode
  ## fsimage and edit logs. This will be mounted to the namenode as a k8s HostPath
  ## volume.
  nameNodeHostPath: /hdfs-name

  ## Node labels and tolerations for pod assignment
  nodeSelector: {}
  tolerations: []
  affinity: {}

## ------------------------------------------------------------------------------
## hdfs-datanode-k8s:
## ------------------------------------------------------------------------------
hdfs-datanode-k8s:
  ## Node labels and tolerations for pod assignment
  nodeSelector: {}
  tolerations: []
  affinity: {}

## ------------------------------------------------------------------------------
## hdfs-krb5-k8s:
## ------------------------------------------------------------------------------
hdfs-krb5-k8s:
  persistence:
    ## Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"

    ## To choose a suitable persistent volume from available static volumes, selectors
    ## are used.
    # selector:
    #   matchLabels:
    #     volume-type: hdfs-ssd

    accessMode: ReadWriteOnce

    size: 20Gi

  ## We use a 3rd party image built from https://github.com/gcavalcante8808/docker-krb5-server.
  ## TODO: The pod currently prints out the admin account in plain text.
  ## Supply an admin account password using a k8s secret.
  ## TODO: The auto-generated passwords might be weak due to low entropy.
  ## Increase entropy by running rngd or haveged.
  ## TODO: Using latest tag is not desirable. The current image does not have specific tags.
  ## Find a way to fix it.
  image:
    #repository: gcavalcante8808/krb5-server
    repository: adel1992/openldap

    tag: 0.0.6
    #tag: latest

    pullPolicy: IfNotPresent

  service:
    type: ClusterIP

    port: 88
## ------------------------------------------------------------------------------
## Global values affecting all sub-charts:
## ------------------------------------------------------------------------------
global:
  ldapuri: 37.59.140.104
  metastore:
    external:
      enabled: false
  ## @param global.imageRegistry Global Docker image registry
  ##
  imageRegistry: ""
  ## @param global.imagePullSecrets Global Docker registry secret names as an array
  ## e.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  ## @param global.storageClass Global StorageClass for Persistent Volume(s)
  ##
  storageClass: ""
  postgresql:
    ## @param global.postgresql.auth.postgresPassword Password for the "postgres" admin user (overrides `auth.postgresPassword`)
    ## @param global.postgresql.auth.username Name for a custom user to create (overrides `auth.username`)
    ## @param global.postgresql.auth.password Password for the custom user to create (overrides `auth.password`)
    ## @param global.postgresql.auth.database Name for a custom database to create (overrides `auth.database`)
    ## @param global.postgresql.auth.existingSecret Name of existing secret to use for PostgreSQL credentials (overrides `auth.existingSecret`).
    ## @param global.postgresql.auth.secretKeys.adminPasswordKey Name of key in existing secret to use for PostgreSQL credentials (overrides `auth.secretKeys.adminPasswordKey`). Only used when `global.postgresql.auth.existingSecret` is set.
    ## @param global.postgresql.auth.secretKeys.userPasswordKey Name of key in existing secret to use for PostgreSQL credentials (overrides `auth.secretKeys.userPasswordKey`). Only used when `global.postgresql.auth.existingSecret` is set.
    ## @param global.postgresql.auth.secretKeys.replicationPasswordKey Name of key in existing secret to use for PostgreSQL credentials (overrides `auth.secretKeys.replicationPasswordKey`). Only used when `global.postgresql.auth.existingSecret` is set.
    ##
    auth:
      postgresPassword: ""
      username: ""
      password: ""
      database: ""
      existingSecret: ""
      secretKeys:
        adminPasswordKey: ""
        userPasswordKey: ""
        replicationPasswordKey: ""
    ## @param global.postgresql.service.ports.postgresql PostgreSQL service port (overrides `service.ports.postgresql`)
    ##
    service:
      ports:
        postgresql: 5432

  kubernetes: 
    master:
      port: "6443"
      host: "5.135.90.212"
  ranger:
    enabled: true

  ## A list of the local disk directories on cluster nodes that will contain the datanode
  ## blocks. These paths will be mounted to the datanode as K8s HostPath volumes.
  ## In a command line, the list should be enclosed in '{' and '}'.
  ## e.g. --set "dataNodeHostPath={/hdfs-data,/hdfs-data1}"
  dataNodeHostPath:
    - /hdfs-data

  ## Parameters for determining which Unix user and group IDs to use in pods.
  ## Persistent volume permission may need to match these.
  podSecurityContext:
    enabled: false
    runAsUser: 0
    fsGroup: 1000

  ## Whether or not to expect namenodes in the HA setup.
  namenodeHAEnabled: true

  ## The number of zookeeper server to have in the quorum.
  ## This should match zookeeper.replicaCount above. Used only when
  ## namenodeHAEnabled is set.
  zookeeperQuorumSize: 1

  ## Override zookeeper quorum address. Zookeeper is used for determining which namenode
  ## instance is active. Separated by the comma character. Used only when
  ## namenodeHAEnabled is set.
  ##
  # zookeeperQuorumOverride: zk-0.zk-svc.default.svc.cluster.local:2181,zk-1.zk-svc.default.svc.cluster.local:2181,zk-2.zk-svc.default.svc.cluster.local:2181

  ## How many journal nodes to launch as a quorum. Used only when
  ## namenodeHAEnabled is set.
  journalnodeQuorumSize: 1

  ## Whether or not to enable default affinity setting.
  defaultAffinityEnabled: true

  ## Whether or not Kerberos support is enabled.
  kerberosEnabled: false

  ## Effective only if Kerberos is enabled. Override th name of the k8s
  ## ConfigMap containing the kerberos config file.
  ##
  # kerberosConfigMapOverride: kerberos-config

  ## Effective only if Kerberos is enabled. Name of the kerberos config file inside
  ## the config map.
  kerberosConfigFileName: krb5.conf

  ## Effective only if Kerberos is enabled. Override the name of the k8s Secret
  ## containing the kerberos keytab files of per-host HDFS principals.
  ## The secret should have multiple data items. Each data item name
  ## should be formatted as:
  ##    `HOST-NAME.keytab`
  ## where HOST-NAME should match the cluster node
  ## host name that each per-host hdfs principal is associated with.
  ##
  # kerberosKeytabsSecretOverride: hdfs-kerberos-keytabs

  ## Required to be non-empty if Kerberos is enabled. Specify your Kerberos realm name.
  ## This should match the realm name in your Kerberos config file.
  kerberosRealm: LABP7.CNAM

  ## Effective only if Kerberos is enabled. Enable protection of datanodes using
  ## the jsvc utility. See the reference doc at
  ## https://hadoop.apache.org/docs/r2.7.2/hadoop-project-dist/hadoop-common/SecureMode.html#Secure_DataNode
  jsvcEnabled: true

## Tags and conditions for triggering a group of relevant subcharts.
tags:
  ## Trigger all subcharts required for high availability. Enabled by default.
  ha: false

  ## Trigger all subcharts required for using Kerberos. Disabled by default.
  kerberos: false

  ## Trigger all subcharts required for non-HA setup. Disabled by default.
  simple: true