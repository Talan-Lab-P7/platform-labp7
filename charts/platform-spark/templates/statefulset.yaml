apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "spark.fullname" . }}
  labels:
    {{- include "spark.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  serviceName: {{ include "spark.fullname" . }}
  selector:
    matchLabels:
      {{- include "spark.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "spark.selectorLabels" . | nindent 8 }}
    spec:
      hostNetwork: {{ .Values.hostNetwork }}
      hostPID: {{ .Values.hostPID }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "spark.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          command: ['/bin/sh']
          args: ["-c","/opt/spark/bin/spark-submit --master k8s://{{ .Values.global.kubernetes.master.host }}:{{ .Values.global.kubernetes.master.port }}  --class org.apache.spark.sql.hive.thriftserver.HiveThriftServer2 spark-internal"]
          args: ["-c","sleep infinity"]
          ports:
            - name: driver
              containerPort: 16780
              protocol: TCP
#          livenessProbe:
#            tcpSocket:
#              port: driver
#          readinessProbe:
#            tcpSocket:
#              port: driver
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: spark-config
              mountPath: /opt/spark/conf/
              readOnly: true
            - name: kerberos-config
              mountPath: /etc/krb5.conf
              subPath: krb5.conf
              readOnly: true
            - name: kerberos-keytabs
              mountPath: /etc/security/
              readOnly: true  
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: spark-config
          projected:
            sources:
              - configMap:
                  name: {{ template "spark.config.fullname" . }}
              - configMap:
                  name: {{ template "hive-meta-store.config.fullname" . }}
              - configMap:
                  name: {{ template "hdfs-k8s.config.fullname" . }}
              {{- if .Values.global.ranger.enabled }}
              - configMap:
                  name: ranger-spark-security-config-map
              - configMap:
                  name: ranger-spark-audit-config-map
              {{- end }}
        - name: kerberos-config
          configMap:
            name: {{ template "krb5-configmap" . }}    
        - name: kerberos-keytabs
          projected:
            secret:
              secretName: {{ template "spark-keytabs-secret" . }}
            secret:
              secretName: {{ template "krb5-keytabs-secret" . }}
