# A headless service to create DNS records.
apiVersion: v1
kind: Service
metadata:
  name: {{ template "hdfs-k8s.namenode.fullname" . }}
  labels:
    app: {{ template "hdfs-k8s.namenode.name" . }}
    chart: {{ template "hdfs-k8s.subchart" . }}
    release: {{ .Release.Name }}
spec:
  ports:
  - port: 8020
    name: fs
  clusterIP: None
  selector:
    app: {{ template "hdfs-k8s.namenode.name" . }}
    release: {{ .Release.Name }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "hdfs-k8s.namenode.fullname" . }}
  labels:
    app: {{ template "hdfs-k8s.namenode.name" . }}
    chart: {{ template "hdfs-k8s.subchart" . }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ template "hdfs-k8s.namenode.name" . }}
  serviceName: {{ template "hdfs-k8s.namenode.fullname" . }}
  # Create a size-1 set.
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "hdfs-k8s.namenode.name" . }}
        release: {{ .Release.Name }}
      {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      # Use hostNetwork so datanodes connect to namenode without going through an overlay network
      # like weave. Otherwise, namenode fails to see physical IP address of datanodes.
      hostNetwork: true
      hostPID: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: hdfs-namenode
          image: adel1992/namenode:3.1.1_ranger
          env:
            - name: HADOOP_CUSTOM_CONF_DIR
              value: /etc/hadoop-custom-conf
            - name: CLUSTER_NAME
              value: hdfs-k8s
          command: ['/bin/sh', '-c']
          # The start script is provided by a config map.
          args:
            - /scripts/init-ranger.sh && /entrypoint.sh && /run.sh
            #- sleep infinity
          ports:
          - containerPort: 8020
            name: fs
          volumeMounts:
            - name: hdfs-name
              mountPath: /hadoop/dfs/name
            - name: hdfs-config
              mountPath: /etc/hadoop-custom-conf
              readOnly: true
            - name: init-ranger
              mountPath: /scripts
            - name: install-properties
              mountPath: /conf 
              readOnly: false 
            {{- if .Values.global.kerberosEnabled }}
            - name: kerberos-config
              mountPath: /etc/krb5.conf
              subPath: {{ .Values.global.kerberosConfigFileName }}
              readOnly: true
            - name: kerberos-keytab-copy
              mountPath: /etc/security/
              readOnly: true
            {{- end }}
      {{- if .Values.global.kerberosEnabled }}
      initContainers:
        - name: copy-kerberos-keytab
          image: busybox:1.27.1
          command: ['sh', '-c']
          args:
            - cp /kerberos-keytabs/hdfs.keytab /kerberos-keytab-copy/hdfs.keytab
          env:
            - name: MY_KERBEROS_NAME
              valueFrom:
                fieldRef:
                {{- if .Values.hostNetworkEnabled }}
                  fieldPath: spec.nodeName
                {{- else }}
                  fieldPath: metadata.name
                {{- end }}
          volumeMounts:
            - name: kerberos-keytabs
              mountPath: /kerberos-keytabs
            - name: kerberos-keytab-copy
              mountPath: /kerberos-keytab-copy
      {{- end }}      
      restartPolicy: Always
      volumes:
        - name: hdfs-name
          hostPath:
            path: {{ .Values.nameNodeHostPath }}
        - name: hdfs-config
          configMap:
            name: {{ template "hdfs-k8s.config.fullname" . }}
        - name: install-properties
          configMap:
            name: install-properties-namenode
        - name: init-ranger
          configMap:
            name: init-ranger-hdfs
            defaultMode: 0744
        {{- if .Values.global.kerberosEnabled }}
        - name: kerberos-config
          configMap:
            name: {{ template "krb5-configmap" . }}
        - name: kerberos-keytabs
          secret:
            secretName: {{ template "krb5-keytabs-secret" . }}
        - name: kerberos-keytab-copy
          emptyDir: {}
        {{- end }}    
