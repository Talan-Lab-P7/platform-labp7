apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "hue.fullname" . }}
  labels:
    statefulSet: hue
{{ if .Values.monitoring.enabled }}
  annotations:
    "sidecar.jaegertracing.io/inject": "true"
{{ end }}
spec:
  selector:
    matchLabels:
      {{- include "hue.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.hue.replicas }}
  serviceName: {{ include "hue.fullname" . }}
  template:
    metadata:
      labels:
        {{- include "hue.selectorLabels" . | nindent 8 }}
{{- with .Values.podLabels }}
{{ toYaml . | indent 8 }}
{{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap-hue.yaml") . | sha256sum }}
        checksum/config-extra: {{ include (print $.Template.BasePath "/configmap-hue-extra.yaml") . | sha256sum }}
        checksum/config-hive: {{ include (print $.Template.BasePath "/configmap-hive.yaml") . | sha256sum }}
{{- with .Values.podAnnotations }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
{{ if eq .Values.hue.database.engine "postgresql_psycopg2" }}
      initContainers:
        
        - name: hue-init
          image: {{ .Values.image.registry }}/hue:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - /bin/sh
            - -c
            - >
              set -x;
              while [ $(curl -s --connect-timeout 1 {{ include "postgresql.primary.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ include "postgresql.service.port" . }} || echo $?) -ne 52 ]; do
                sleep 1;
              done
{{ end }}
      containers:
      - name: hue
        image: {{ .Values.image.registry }}/hue:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
#        command: ['/bin/sh']
#        args: ["-c","sleep infinity"]
        ports:
          - containerPort: 8888
        resources:
          requests:
            # memory: "350Mi"
            cpu: "50m"
        volumeMounts:
        - name: config-volume
          mountPath: /usr/share/hue/desktop/conf/z-hue.ini
          subPath: hue-ini
        - name: config-volume-extra
          mountPath: /usr/share/hue/desktop/conf/zz-hue.ini
          subPath: hue-ini
        - name: hadoop-config
          mountPath: /etc/hadoop/conf/
        - name: kerberos-keytabs
          mountPath: /etc/security/
        - name: kerberos-config
          mountPath: /etc/krb5.conf
          subPath: krb5.conf
          readOnly: true
        readinessProbe:
          httpGet:
            path: /desktop/debug/is_alive
            port: 8888
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 30
{{ if .Values.balancer.enabled }}
      - name: nginx
        image: {{ .Values.image.registry }}/nginx:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - containerPort: 80
        resources:
          requests:
            # memory: "64Mi"
            cpu: "20m"
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/sites-available/hue
          subPath: hue
{{ end }}
      volumes:
        - name: config-volume
          configMap:
            name: hue-config
        - name: config-volume-extra
          configMap:
            name: hue-config-extra

        - name: kerberos-keytabs
          projected:
            sources:
              - secret:
                  name: {{ template "hue-keytabs-secret" . }}
              - secret:
                  name: {{ template "hive-keytabs-secret" . }}
              - secret:
                  name: {{ template "krb5-keytabs-secret" . }}
        - name: hadoop-config
          projected:
            sources:
              - configMap:
                  name: {{ template "hive-meta-store.config.fullname" . }}
              - configMap:
                  name: {{ template "hdfs-k8s.config.fullname" . }}
        - name: kerberos-config
          configMap:
            name: {{ template "krb5-configmap" . }}
{{ if .Values.balancer.enabled }}
        - name: nginx-config
          configMap:
            name: nginx-config
{{ end }}
      {{- with .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}